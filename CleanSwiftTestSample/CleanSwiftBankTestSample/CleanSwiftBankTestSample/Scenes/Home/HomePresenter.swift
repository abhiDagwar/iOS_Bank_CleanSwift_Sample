//
//  HomePresenter.swift
//  Test_Bank_iOS
//
//  Created by Abhishek D on 13/10/19.
//  Copyright (c) 2019 Abhishek D. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomePresentationLogic
{
    func presentUserDetails(response: Home.GetAccountHolderDetails.Response)
    func presentAccountStatementList(response: Home.GetAccountStatementList.Response)
    func presentLogout()
}

class HomePresenter: HomePresentationLogic
{
    weak var viewController: HomeDisplayLogic?
    
    // MARK: Display User Account Info
    
    func presentUserDetails(response: Home.GetAccountHolderDetails.Response)
    {
        let user = response.userAccountDetails
        let viewModel = mapUserToViewModel(user: user)
        viewController?.displayUserDetails(viewModel: viewModel)
    }
    
    func mapUserToViewModel(user: UserAccount) -> Home.GetAccountHolderDetails.ViewModel {
        let accountHolderName = user.name
        let accountInfo = user.bankAccount + "/" + user.agency
        let accountBalance = user.balance
        
        return Home.GetAccountHolderDetails.ViewModel(name: accountHolderName, bankAccountInfo: accountInfo, balance: accountBalance)
    }
    
    // MARK: Account Statement List
    
    func presentAccountStatementList(response: Home.GetAccountStatementList.Response)
    {
        if let statementList = response.accountStatement {
            if !statementList.isEmpty {
                handlePresentFetchAccountStementList(statementList: statementList)
            }
        }
    }
    
    private func handlePresentFetchAccountStementList(statementList: [StatementList])
    {
        let accountStatementList = formatAccountStatementList(statementList: statementList)
        let viewModel = Home.GetAccountStatementList.ViewModel(success: true, statementList: accountStatementList)
        viewController?.displayAccountStatementList(viewModel: viewModel)
    }
    
    private func formatAccountStatementList(statementList: [StatementList]?) -> [Home.GetAccountStatementList.ViewModel.StatementList]
    {
        var accountStatementList: [Home.GetAccountStatementList.ViewModel.StatementList] = []
        if let statementList = statementList {
            for statement in statementList {
                let title = statement.title
                let desc = statement.desc
                let date = statement.date
                let balanceValue = statement.value
                let accountStatement = Home.GetAccountStatementList.ViewModel.StatementList(title: title, desc: desc, date: date, value: balanceValue)
                accountStatementList.append(accountStatement)
            }
        }
        return accountStatementList
    }
    // MARK: Logout
    
    func presentLogout()
    {
        viewController?.displayLogout()
    }
    
}
