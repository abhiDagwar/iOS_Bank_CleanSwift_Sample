//
//  TestBankLoginPresenter.swift
//  Test_Bank_iOS
//
//  Created by Abhishek D on 13/10/19.
//  Copyright (c) 2019 Abhishek D. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TestBankLoginPresentationLogic
{
    func presentLogin(response: TestBankLogin.Login.Response?)
    func presentLogin(with error: TestBankLogin.Login.Error)
}

/**
 This class get the Response from the Interactor, format it into a ViewModel and pass the result back to the ViewController. Presenter will be in charge of the presentation logic. This component decides how the data will be presented to the user.
 
 Usage:
 - **Login User** - Map success login response to the viewModel.
 - **Error Login** - Map error login response to the viewModel.
 */
class TestBankLoginPresenter: TestBankLoginPresentationLogic
{
    weak var viewController: TestBankLoginDisplayLogic?
    
    
}

extension TestBankLoginPresenter {
    /**
     This function map the sucessful login user details with the viewModel.
     
     - Parameters:
        - response: Success valid user details parse response from network.
     */
    func presentLogin(response: TestBankLogin.Login.Response?)
    {
        if let response = response {
            let viewModel = TestBankLogin.Login.ViewModel(success: response.success, loginResponse: response.loginResponse)
            viewController?.displayLogin(viewModel: viewModel)
        } else {
            //viewController?.displayError()
        }
    }
    
    /**
     This function map the error response to the viewModel.
     
     - Parameters:
        - error: Error details response from network API.
     */
    func presentLogin(with error: TestBankLogin.Login.Error) {
        let errorModel = TestBankLogin.Login.ErrorModel(success: error.success, errorResponse: error.errorResponse)
        viewController?.displayError(errorModel: errorModel)
    }
}
